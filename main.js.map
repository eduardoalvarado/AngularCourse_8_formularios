{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/data/data.component.html","webpack:///./src/app/components/data/data.component.ts","webpack:///./src/app/components/template/template.component.html","webpack:///./src/app/components/template/template.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".main-container {\\n    margin-top: 50px\\n}\"","module.exports = \"<div class=\\\"container main-container\\\">\\n  <app-data></app-data>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\n\nimport { AppComponent } from './app.component';\nimport { TemplateComponent } from './components/template/template.component';\nimport { DataComponent } from './components/data/data.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TemplateComponent,\n    DataComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<h4>Formularios <small>data</small></h4>\\n<hr>\\n<form [formGroup]=\\\"forma\\\" (ngSubmit)=\\\"guardarCambios()\\\">\\n\\n  <div formGroupName=\\\"nombrecompleto\\\">\\n    <div class=\\\"form-group row\\\" [ngClass]=\\\"{'text-danger': !forma.controls['nombrecompleto'].controls['nombre'].valid}\\\">\\n      <label class=\\\"col-2 col-form-label\\\">Nombre</label>\\n      <div class=\\\"col-8\\\">\\n\\n        <input class=\\\"form-control\\\"\\n               type=\\\"text\\\"\\n               placeholder=\\\"Nombre\\\"\\n               formControlName=\\\"nombre\\\">\\n        <div *ngIf=\\\"forma.get('nombrecompleto.nombre').errors?.required\\\"\\n          class=\\\"form-control-feedback\\\">\\n          El nombre es necesario.\\n        </div>\\n        <div *ngIf=\\\"forma.get('nombrecompleto.nombre').errors?.minlength\\\"\\n             class=\\\"form-control-feedback\\\">\\n          Por lo menos tres caracteres\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-2 col-form-label\\\">Apellido</label>\\n      <div class=\\\"col-8\\\">\\n\\n        <input class=\\\"form-control\\\"\\n               type=\\\"text\\\"\\n               placeholder=\\\"Apellido\\\"\\n               formControlName=\\\"apellido\\\">\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n    <label class=\\\"col-2 col-form-label\\\">Correo</label>\\n    <div class=\\\"col-md-8\\\">\\n\\n      <input class=\\\"form-control\\\"\\n             type=\\\"email\\\"\\n             placeholder=\\\"Correo electrÃ³nico\\\"\\n             formControlName=\\\"correo\\\">\\n    </div>\\n  </div>\\n\\n\\n\\n  <div class=\\\"form-group row\\\">\\n    <label class=\\\"col-2 col-form-label\\\">&nbsp;</label>\\n    <div class=\\\"input-group col-md-8\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary\\\">\\n        Guardar\\n      </button>\\n    </div>\\n  </div>\\n  {{forma.valid}}\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-data',\n  templateUrl: './data.component.html',\n  styles: []\n})\nexport class DataComponent {\n\n  forma: FormGroup;\n  usuario: Object = {\n    nombrecompleto: {\n      nombre: 'Oscar',\n      apellido: 'Alvarado'\n    },\n    correo: 'oscaralvarado@gmail.com'\n  };\n  constructor() {\n    console.log(this.usuario);\n   this.forma = new FormGroup({\n     'nombrecompleto': new FormGroup({\n       'nombre': new FormControl('', [Validators.required, Validators.minLength(3)]),\n       'apellido': new FormControl('', Validators.required)\n     }),\n     'correo': new FormControl('', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$')])\n   });\n   this.forma.setValue(this.usuario);\n  }\n  guardarCambios() {\n    console.log(this.forma.value);\n    this.forma.reset(this.usuario);\n  }\n}\n","module.exports = \"<h4>Formularios <small>template</small></h4>\\n<hr>\\n<form (ngSubmit)=\\\"guardar(forma)\\\" novalidate #forma=\\\"ngForm\\\">\\n\\n  <div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-2 col-form-label\\\">Nombre</label>\\n      <div class=\\\"col-8\\\">\\n\\n        <input class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': (nombre.errors?.required || nombre.errors?.minlength) && nombre.touched}\\\"\\n                type=\\\"text\\\" \\n                placeholder=\\\"Nombre\\\" \\n                name=\\\"nombre\\\" \\n                [(ngModel)] = \\\"usuario.nombre\\\" \\n                required \\n                minlength=\\\"5\\\"\\n                #nombre=\\\"ngModel\\\">\\n        <div *ngIf=\\\"nombre.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n          Este campo es requerido\\n        </div>\\n        <div *ngIf=\\\"nombre.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n          Este campo requiere {{ nombre.errors.minlength.requiredLength}} caracteres\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-2 col-form-label\\\">Apellido</label>\\n      <div class=\\\"col-8\\\">\\n\\n        <input class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': apellido.errors?.required && apellido.touched}\\\"\\n                type=\\\"text\\\" \\n                placeholder=\\\"Apellido\\\" \\n                name=\\\"apellido\\\" \\n                [(ngModel)] = \\\"usuario.apellido\\\" \\n                required\\n                #apellido=\\\"ngModel\\\">\\n      \\n        <div *ngIf=\\\"apellido.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n          Este campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n    <label class=\\\"col-2 col-form-label\\\">Correo</label>\\n    <div class=\\\"col-md-8\\\">\\n\\n      <input class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': (correo.errors?.required || correo.errors?.pattern) && correo.touched}\\\"\\n              type=\\\"email\\\" \\n              placeholder=\\\"Correo electrÃ³nico\\\" \\n              name=\\\"correo\\\" \\n              [(ngModel)] = \\\"usuario.correo\\\" \\n              required \\n              pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"\\n              #correo=\\\"ngModel\\\"\\n              required>\\n      <div *ngIf=\\\"correo.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n        Este campo es requerido\\n      </div>\\n      <div *ngIf=\\\"correo.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n        Formato incorrecto\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n    <label class=\\\"col-2 col-form-label\\\">Pais</label>\\n    <div class=\\\"col-md-8\\\">\\n      <select [(ngModel)]=\\\"usuario.pais\\\"\\n            name=\\\"paises\\\"\\n            class=\\\"form-control\\\">\\n            <option value=\\\"\\\">Seleccione un Pais</option>\\n            <option *ngFor=\\\"let pais of paises\\\" [value]=\\\"pais.codigo\\\">{{ pais.nombre }}</option>\\n      </select>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-2 col-form-label\\\">Sexo</label>\\n      <div class=\\\"col-md-8\\\">\\n          <div class=\\\"custom-control custom-radio\\\" *ngFor=\\\"let sex of sexos, let i = index\\\">\\n              <input [(ngModel)]=\\\"usuario.sexo\\\" \\n                      type=\\\"radio\\\" \\n                      id=\\\"radio{{i}}\\\" \\n                      name=\\\"customRadio\\\" \\n                      class=\\\"custom-control-input\\\" \\n                      value=\\\"{{sex}}\\\">\\n              <label class=\\\"custom-control-label\\\" for=\\\"radio{{i}}\\\">{{ sex }}</label>\\n          </div>\\n      </div>\\n  </div>\\n\\n\\n\\n\\n  <div class=\\\"form-group row\\\">\\n    <label class=\\\"col-2 col-form-label\\\">&nbsp;</label>\\n    <div class=\\\"input-group col-md-8\\\">\\n      <button \\n        type=\\\"submit\\\" \\n        class=\\\"btn btn-outline-primary\\\"\\n        [disabled]=\\\"!forma.valid\\\">\\n        Guardar\\n      </button>\\n    </div>\\n  </div>\\n\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-template',\n  templateUrl: './template.component.html',\n  styles: [``]\n})\nexport class TemplateComponent implements OnInit {\n\n  usuario: Object = {\n    nombre: null,\n    apellido: null,\n    correo: null,\n    pais: '',\n    sexo: ''\n  };\n\n  paises: Object = [\n    {\n      codigo: 'PER',\n      nombre: 'Peru'\n    },\n    {\n      codigo: 'ESP',\n      nombre: 'EspaÃ±a'\n    }\n  ];\n\n  sexos: string[] = ['Hombre', 'Mujer'];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  guardar( forma: NgForm ) {\n    console.log('Formulario guardado');\n    console.log('NgForm', forma);\n    console.log('Valor', forma.value);\n\n    console.log('usuario', this.usuario);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}